import{_ as n,o as s,c as a,d as e}from"./app-Bam4meA3.js";const t={},p=e(`<h3 id="shell-脚本查找文件中是否包含某关键字" tabindex="-1"><a class="header-anchor" href="#shell-脚本查找文件中是否包含某关键字"><span>shell 脚本查找文件中是否包含某关键字</span></a></h3><p>为了保障公司的前端项目镜像发版的顺利改造，有了此需求：检测目录下所有文件中是否存在某些写死的变量。 代码如下：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>

<span class="token assign-left variable">keywords</span><span class="token operator">=</span><span class="token variable">$1</span><span class="token punctuation">;</span>
<span class="token assign-left variable">ignore_dir</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">&#39;conf&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token assign-left variable">include_file</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">&#39;.js&#39;</span>,<span class="token string">&#39;.html&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment"># 查找是否包含关键字</span>
<span class="token keyword">function</span> <span class="token function-name function">hasKeywords</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token assign-left variable">file_content</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">cat</span> $1<span class="token variable">\`</span></span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$file_content</span>&quot;</span> <span class="token operator">=~</span> <span class="token variable">$keywords</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">then</span>
       <span class="token builtin class-name">echo</span> <span class="token variable">$1</span><span class="token punctuation">;</span>
       <span class="token builtin class-name">echo</span> <span class="token string">&#39;yes&#39;</span><span class="token punctuation">;</span>
       <span class="token keyword">fi</span>
<span class="token punctuation">}</span>

<span class="token comment"># 遍历需要检测的所有文件</span>
<span class="token keyword">function</span> <span class="token function-name function">get_file</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token builtin class-name">cd</span> <span class="token variable">$1</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token for-or-select variable">file_name</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">\`</span><span class="token function">ls</span><span class="token variable">\`</span></span><span class="token punctuation">;</span>
        <span class="token keyword">do</span>
           <span class="token assign-left variable">cur_dir</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">$1</span>/<span class="token variable">$file_name</span>&quot;</span><span class="token punctuation">;</span>
           <span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token parameter variable">-d</span> <span class="token variable">$cur_dir</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span> <span class="token variable">\${ignore_dir<span class="token punctuation">[</span>@<span class="token punctuation">]</span>}</span> <span class="token operator">=~</span> <span class="token string">&quot;<span class="token variable">$file_name</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
           <span class="token keyword">then</span> 
            get_file <span class="token variable">$cur_dir</span><span class="token punctuation">;</span>
           <span class="token keyword">elif</span> <span class="token punctuation">[</span> <span class="token parameter variable">-f</span> <span class="token variable">$cur_dir</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>
           <span class="token keyword">then</span> 
            <span class="token assign-left variable">file_type</span><span class="token operator">=</span><span class="token variable">\${file_name<span class="token operator">##</span>*.}</span>
            <span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token variable">\${include_file<span class="token punctuation">[</span>@<span class="token punctuation">]</span>}</span> <span class="token operator">=~</span> <span class="token string">&quot;<span class="token variable">$file_type</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">then</span> 
            <span class="token comment">#  echo $cur_dir;</span>
             hasKeywords <span class="token variable">$cur_dir</span><span class="token punctuation">;</span>
             <span class="token keyword">fi</span><span class="token punctuation">;</span>
           <span class="token keyword">fi</span><span class="token punctuation">;</span>
        <span class="token keyword">done</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

get_file <span class="token environment constant">$PWD</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="测试方式" tabindex="-1"><a class="header-anchor" href="#测试方式"><span>测试方式：</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>./<span class="token punctuation">[</span>filename<span class="token punctuation">]</span>.sh keywords
<span class="token comment"># 传入正则</span>
./<span class="token punctuation">[</span>filename<span class="token punctuation">]</span>.sh <span class="token string">&quot;https://(www|admin)&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),l=[p];function i(o,c){return s(),a("div",null,l)}const r=n(t,[["render",i],["__file","fist.html.vue"]]),d=JSON.parse('{"path":"/dryGoods/fist.html","title":"shell 脚本查找文件中是否包含某关键字","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"shell 脚本查找文件中是否包含某关键字","description":"shell 脚本 查找当前目录下所有js、html文件中，是否包含某关键字"},"headers":[{"level":3,"title":"shell 脚本查找文件中是否包含某关键字","slug":"shell-脚本查找文件中是否包含某关键字","link":"#shell-脚本查找文件中是否包含某关键字","children":[]},{"level":3,"title":"测试方式：","slug":"测试方式","link":"#测试方式","children":[]}],"git":{"updatedTime":1708249935000,"contributors":[{"name":"liuxiwen","email":"liuxiwen@xinchao.com","commits":1}]},"filePathRelative":"dryGoods/fist.md"}');export{r as comp,d as data};
